name: CI - Build, Push Docker & Update Helm Values

on:
  push:
    branches:
      - master

env:
  DOCKER_BUILDKIT: 0
  DOCKERHUB_USER: nguyengianguit
  IMAGE_TAG: v${{ github.run_id }}

jobs:
  build-and-push:
    name: Build and Push Docker Images (Changed Only)
    runs-on: [self-hosted, linux]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Láº¥y 2 commit gáº§n nháº¥t

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine changed services and build Docker images
        run: |
          SERVICES=("Front-end" "Authentication_services" "department_services" "employee_services" "Personal_services" "salary_services")
          CHANGED_SERVICES=""

          for SERVICE in "${SERVICES[@]}"; do
            if git diff --name-only HEAD^ HEAD | grep "^$SERVICE/" > /dev/null; then
              CHANGED_SERVICES="$CHANGED_SERVICES $SERVICE"
            fi
          done

          CHANGED_SERVICES=$(echo $CHANGED_SERVICES | xargs)  # remove extra spaces
          echo "Changed services: $CHANGED_SERVICES"
          echo "$CHANGED_SERVICES" > changed_services.txt
          echo "${{ env.IMAGE_TAG }}" > image_tag.txt

          for SERVICE in $CHANGED_SERVICES; do
            IMAGE_NAME=$(echo $SERVICE | tr '_' '-' | tr '[:upper:]' '[:lower:]')
            echo "ðŸš€ Building $SERVICE â†’ $DOCKERHUB_USER/$IMAGE_NAME:${{ env.IMAGE_TAG }}"
            docker build -t $DOCKERHUB_USER/$IMAGE_NAME:${{ env.IMAGE_TAG }} ./$SERVICE
            docker push $DOCKERHUB_USER/$IMAGE_NAME:${{ env.IMAGE_TAG }}

            # Báº¯t Ä‘áº§u scan image báº±ng Trivy
            echo "ðŸ”’ Báº¯t Ä‘áº§u scan image $DOCKERHUB_USER/$IMAGE_NAME:${{ env.IMAGE_TAG }} báº±ng Trivy"
            trivy image --exit-code 1 --severity HIGH,CRITICAL $DOCKERHUB_USER/$IMAGE_NAME:${{ env.IMAGE_TAG }} || echo "Trivy scan completed with warnings."

      - name: Upload artifacts (changed services & image tag)
        uses: actions/upload-artifact@v4
        with:
          name: image-data
          path: |
            changed_services.txt
            image_tag.txt

  update-helm:
    name: Update Helm values.yaml in GitLab repo
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: image-data

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git curl yq

      - name: Clone Helm chart repo
        run: |
          git clone https://${{ secrets.GIT_USERNAME }}:${{ secrets.GIT_TOKEN }}@gitlab.com/devops_group22/ci-runner-github.git helm-chart

      - name: Update values.yaml with changed services
        run: |
          declare -A SERVICE_MAP=( 
            ["Front-end"]="front_end"
            ["Authentication_services"]="authentication_services"
            ["department_services"]="department_services"
            ["employee_services"]="employee_services"
            ["Personal_services"]="personal_services"
            ["salary_services"]="salary_services"
          )

          CHANGED_SERVICES=$(cat changed_services.txt)
          IMAGE_TAG=$(cat image_tag.txt)

          cd helm-chart/helm-chart

          for SERVICE_DIR in $CHANGED_SERVICES; do
            HELM_KEY=${SERVICE_MAP[$SERVICE_DIR]}
            IMAGE_NAME=$(echo "$SERVICE_DIR" | tr '_' '-' | tr '[:upper:]' '[:lower:]')

            echo "ðŸ”§ Updating $HELM_KEY â†’ $DOCKERHUB_USER/$IMAGE_NAME:$IMAGE_TAG"

            yq -i -y ".services.${HELM_KEY}.image.repository = \"$DOCKERHUB_USER/$IMAGE_NAME\"" values.yaml
            yq -i -y ".services.${HELM_KEY}.image.tag = \"$IMAGE_TAG\"" values.yaml
          done

      - name: Commit and push changes
        run: |
          cd helm-chart
          git config user.name "${{ secrets.GIT_USERNAME }}"
          git config user.email "ci-bot@example.com"
          git add .
          git commit -m "Update image tag to $IMAGE_TAG [skip ci]" || echo "Nothing to commit"
          git push origin main

      - name: Commit and push changed services file to GitLab
        run: |
          cd helm-chart
          git add changed_services.txt
          git commit -m "Update changed services and their image tags" || echo "Nothing to commit"
          git push origin main
